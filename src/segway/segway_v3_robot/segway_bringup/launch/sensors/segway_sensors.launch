<!-- Launch file for Segway sensor startup -->

<launch>
    <!-- SI has support for GPS, microstrain 3DM-GX3/4, PGR Flea3USB3, CRL Multisense SL, Velodyne VLP-16 and HDL32E, -->
    <!-- SICK LMS1XX/2XX, Hokuyo scanners, Kinova JACO/MICO, and various other peripherals and sensors. Most are available -->
    <!-- in custom integrated systems but are not included here to simplify-->   

    <group if="$(optenv SEGWAY_HAS_KINECT false)">
        <include file="$(find openni_launch)/openni.launch" clear_params="true" if="$(optenv SEGWAY_HAS_KINECT_360 false)">
            <arg name="camera"                          value="segway/kinect"/>                             
            <arg name="publish_tf"                      value="false"/>                         
            <arg name="depth_registration"              value="false"/>                 
            <arg name="num_worker_threads"              value="4" />                
                                                                                                            
            <!-- Processing Modules -->                                                                     
            <arg name="rgb_processing"                  value="true"/>                     
            <arg name="ir_processing"                   value="true"/>                      
            <arg name="depth_processing"                value="true"/>                   
            <arg name="depth_registered_processing"     value="false"/>        
            <arg name="disparity_processing"            value="false"/>               
            <arg name="disparity_registered_processing" value="false"/>
        </include>
        <!-- need to add kinect one bridge here -->
    </group>

    <group if="$(optenv SEGWAY_HAS_ONE_2D_LASER false)">
        <node pkg="urg_node" type="urg_node" name="$(optenv LASER1_PREFIX base)_laser_node" clear_params="true" respawn="true" if="$(optenv SEGWAY_LASER1_IS_HOKUYO false)">
            <remap from="scan" to="/segway/$(optenv LASER1_PREFIX base)_scan" />
            <param name="ip_address" value="$(optenv SEGWAY_LASER1_IP 10.66.171.6)" />
            <param name="ip_port" value="$(optenv SEGWAY_LASER1_PORT 10940)" />
            <param name="frame_id" value="segway/$(optenv LASER1_PREFIX base)_laser_link"/>
            <param name="calibrate_time" value="false" />
            <param name="publish_intensity" value="true" />
            <param name="angle_max" value="$(optenv LASER1_MAX_ANGLE 2.35619449019)"/>
            <param name="angle_min" value="$(optenv LASER1_MIN_ANGLE -2.35619449019)"/>
        </node>
        
        <node pkg="sick_tim" type="sick_tim551_2050001" name="$(optenv LASER1_PREFIX base)_laser_node" clear_params="true" respawn="true" if="$(optenv SEGWAY_LASER1_IS_SICK_TIM false)">
            <remap from="scan" to="/segway/$(optenv LASER1_PREFIX base)_scan" />
            <param name="max_ang" value="$(optenv LASER1_MAX_ANGLE 2.35619449019)"/>
            <param name="min_ang" value="$(optenv LASER1_MIN_ANGLE -2.35619449019)"/>
            <param name="intensity" type="bool" value="True" />
            <param name="skip" type="int" value="0" />
            <param name="frame_id" type="str" value="segway/$(optenv LASER1_PREFIX base)_laser_link" />
            <param name="time_offset" type="double" value="-0.001" />
            <param name="publish_datagram" type="bool" value="False" />
            <param name="subscribe_datagram" type="bool" value="false" />
            <param name="range_min" type="double" value="$(optenv LASER1_MIN_RANGE 0.05)" />
            <param name="range_max" type="double" value="$(optenv LASER1_MAX_RANGE 20.0)" />
            <param name="hostname" type="string" value="$(optenv SEGWAY_LASER1_IP 10.66.171.8)" />
            <param name="port" type="string" value="$(optenv SEGWAY_LASER1_PORT 2112)" />
            <param name="timelimit" type="int" value="5" />

            <!-- Older versions of the scanner firmware report an incorrect time_increment.
             If you get a warning about time_increment, uncomment this. -->
            <!-- <param name="time_increment" type="double" value="0.000061722" /-->
        </node>
    
        <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="segway_laser_filter" clear_params="true" respawn="true" unless="$(optenv SEGWAY_HAS_SECOND_2D_LASER false)">
            <remap from="scan" to="/segway/$(optenv LASER1_PREFIX base)_scan" />
            <remap from="scan_filtered" to="/segway/filtered_scan" />
            <param name="target_frame" value="segway/base_link" />
            <param name="high_fidelity" value="true" />
            <rosparam command="load" 
                file="$(find segway_bringup)/launch/sensors/config/$(optenv SEGWAY_PLATFORM_NAME RMP210)/2d_scan_filter.yaml" />
        </node>
    </group>
    
    <group if="$(optenv SEGWAY_HAS_SECOND_2D_LASER false)">
        <node pkg="urg_node" type="urg_node" name="$(optenv LASER2_PREFIX base)_laser_node" clear_params="true" respawn="true" if="$(optenv SEGWAY_LASER2_IS_HOKUYO false)">
            <remap from="scan" to="/segway/$(optenv LASER2_PREFIX rear)_scan" />
            <param name="ip_address" value="$(optenv SEGWAY_LASER2_IP 10.66.171.7)" />
            <param name="ip_port" value="$(optenv SEGWAY_LASER2_PORT 10940)" />
            <param name="frame_id" value="segway/$(optenv LASER2_PREFIX rear)_laser_link"/>
            <param name="calibrate_time" value="false" />
            <param name="publish_intensity" value="true" />
            <param name="angle_max" value="$(optenv LASER2_MAX_ANGLE 2.35619449019)"/>
            <param name="angle_min" value="$(optenv LASER2_MIN_ANGLE -2.35619449019)"/>
        </node>
        
        <node pkg="sick_tim" type="sick_tim551_2050001" name="$(optenv LASER2_PREFIX base)_laser_node" respawn="false" if="$(optenv SEGWAY_LASER2_IS_SICK_TIM false)">
            <remap from="scan" to="/segway/$(optenv LASER2_PREFIX rear)_scan" />
            <param name="max_ang" value="$(optenv LASER2_MAX_ANGLE 2.35619449019)"/>
            <param name="min_ang" value="$(optenv LASER2_MIN_ANGLE -2.35619449019)"/>
            <param name="intensity" type="bool" value="True" />
            <param name="skip" type="int" value="0" />
            <param name="frame_id" type="str" value="/segway/$(optenv LASER2_PREFIX rear)_laser_link" />
            <param name="time_offset" type="double" value="-0.001" />
            <param name="publish_datagram" type="bool" value="False" />
            <param name="subscribe_datagram" type="bool" value="false" />
            <param name="range_min" type="double" value="$(optenv LASER2_MIN_RANGE 0.05)" />
            <param name="range_max" type="double" value="$(optenv LASER2_MAX_RANGE 20.0)" />
            <param name="hostname" type="string" value="$(optenv SEGWAY_LASER2_IP 10.66.171.9)" />
            <param name="port" type="string" value="$(optenv SEGWAY_LASER2_PORT 2112)" />
            <param name="timelimit" type="int" value="5" />
            <!-- Older versions of the scanner firmware report an incorrect time_increment.
             If you get a warning about time_increment, uncomment this. -->
            <!-- <param name="time_increment" type="double" value="0.000061722" /-->
        </node>
        
        <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
            <param name="destination_frame" value="segway/base_link"/>
            <param name="cloud_destination_topic" value="/segway/merged_cloud"/>
            <param name="scan_destination_topic" value="/segway/scan_multi"/>
            <param name="laserscan_topics" value ="/segway/$(optenv LASER1_PREFIX front)_scan /segway/$(optenv LASER2_PREFIX rear)_scan"/>
        </node>
	    
        <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="segway_laser_filter" clear_params="true" respawn="true">
            <remap from="scan" to="/segway/scan_multi" />
            <remap from="scan_filtered" to="/segway/filtered_scan" />
            <param name="target_frame" value="segway/base_link" />
            <param name="high_fidelity" value="true" />
            <rosparam command="load" 
                file="$(find segway_bringup)/launch/sensors/config/$(optenv SEGWAY_PLATFORM_NAME RMP_210)/2d_scan_filter.yaml" />
        </node>
	</group>	


	<group if="$(optenv SEGWAY_HAS_VLP16 false)">
		<!-- start nodelet manager and driver nodelets -->
		<include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
			<arg name="model" value="VLP16" />
            <arg name="frame_id" value="/segway/velodyne_frame" />
            <arg name="device_ip" value="$(optenv SEGWAY_VLP16_IP 10.66.171.10)" />
            <arg name="port" value="$(optenv SEGWAY_VLP16_PORT 4194)" />
            <arg name="manager" value="velodyne_nodelet_manager" />
            <arg name="time_offset" value="-0.04"/>
		</include>

		<!-- start cloud nodelet -->
		<include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
			<arg name="calibration" value="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
			<arg name="manager" value="velodyne_nodelet_manager"/>
		</include>
		

        <node pkg="nodelet" type="nodelet" name="pointcloud_to_laserscan" 
        args="load pointcloud_to_laserscan/pointcloud_to_laserscan_nodelet velodyne_nodelet_manager">
            <remap from="cloud_in" to="/velodyne_points"/>
            <remap from="scan" to="/segway/scan_3d" />
            
            <param name="target_frame" value="segway/base_link"/>
            <param name="min_height" value="$(optenv VLP16_SCAN_MIN_HEIGHT 0.05)" />
            <param name="max_height" value="$(optenv VLP16_SCAN_MAX_HEIGHT 1.0)" />
            <param name="angle_min" value="-3.1416" /> <!-- -pi -->
            <param name="angle_max" value="3.1416" /> <!-- pi -->
            <param name="scan_time" value="0.1" />
            <param name="range_max" value="40.0" />
            <param name="range_min" value="0.45" />
            <param name="use_inf" value="true" />

        </node>
        
        <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="segway_3d_laser_filter" clear_params="true" respawn="true" >
            <remap from="scan" to="/segway/scan_3d" />
            <remap from="scan_filtered" to="/segway/filtered_scan_3d" if="$(optenv SEGWAY_HAS_ONE_2D_LASER false)"/>
            <remap from="scan_filtered" to="/segway/filtered_scan" unless="$(optenv SEGWAY_HAS_ONE_2D_LASER false)"/>
            <param name="target_frame" value="segway/base_link" />
            <param name="high_fidelity" value="true" />
            <rosparam command="load" 
                file="$(find segway_bringup)/launch/sensors/config/$(optenv SEGWAY_PLATFORM_NAME RMP210)/3d_scan_filter.yaml" />
        </node>
	</group>
	
	<node pkg="um7" type="um7_driver" name="um7_node" if="$(optenv SEGWAY_HAS_UM7_IMU false)">
		<param name="port" value="$(env SEGWAY_UM7_DEV)"/>
		<param name="frame_id" value="/segway/ext_imu_frame"/>
        <remap from="/imu/data" to="/um7/data"/>
        <remap from="/imu/mag" to="/um7/mag"/>
        <remap from="/imu/rpy" to="/um7/rpy"/>
        <remap from="/imu/temperature" to="/um7/temperature"/>
	</node>

    <group ns="camera" if="$(optenv SEGWAY_HAS_FLEA3 false)">
        <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />

        <node pkg="nodelet" type="nodelet" name="camera_nodelet"
            args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager" >
            <param name="frame_id" value="/segway/camera_optical_frame" />
            <param name="serial" value="$(env SEGWAY_FLEA3_SN)" />

            <!-- When unspecified, the driver will use the default framerate as given by the
            camera itself. Use this parameter to override that value for cameras capable of
            other framerates. -->
            <param name="frame_rate" value="30" />
            <param name="video_mode" value="format7_mode0"/>

            <!-- Use the camera_calibration package to create this file -->
            <param name="camera_info_url" value="file://$(find segway_bringup)/launch/sensors/config/camera_cal.yaml" if="$(optenv SEGWAY_FLEA3_IS_CALIBRATED false)"/>
        </node>

        <node pkg="nodelet" type="nodelet" name="image_proc_debayer"
            args="load image_proc/debayer camera_nodelet_manager">
        </node>

        <node pkg="nodelet" type="nodelet" name="image_proc_rectify"
            args="load image_proc/rectify camera_nodelet_manager">
        </node>

    </group>
    
    <group ns="segway/feedback/gps" if="$(optenv SEGWAY_HAS_GPS false)">
        <!-- NavSat Serial -->
        <node pkg="nmea_comms" type="serial_node" name="nmea_serial_node" output="screen">
            <param name="port" value="/dev/ttyS1" />
            <param name="baud" value="4800" />
        </node>

        <!-- NavSat Processing -->
        <node pkg="nmea_navsat_driver" type="nmea_topic_driver" name="nmea_topic_driver"/>
    </group>

    <group if="$(optenv SEGWAY_HAS_NEO7 false)"> 
        <node name="gps" pkg="ublox_gps" type="ublox_gps" respawn="true" >
            <remap from="fix" to="/segway/feedback/gps/fix_2d"/>
            <param name="device" type="string" value="$(env SEGWAY_NEO7_DEV)"/>
            <param name="frame_id" type="string" value="/segway/gps_frame"/>
            <param name="baudrate" type="int" value="38400"/>
            <param name="rate" type="int" value="4"/>
            <param name="enable_sbas" type="bool" value="true"/>
            <param name="dynamic_model" type="string" value="portable"/>
            <param name="fix_mode" type="string" value="both"/>
            <param name="dr_limit" type="int" value="0"/>
            <param name="enable_beidou" type="bool" value="false"/>
            <param name="enable_glonass" type="bool" value="false"/>
            <param name="enable_ppp" type="bool" value="false"/>
            <param name="ublox_version" type="int" value="6"/>
        </node>
    </group>
    
</launch> 
    
    
