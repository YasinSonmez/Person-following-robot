#!/usr/bin/env python
PACKAGE = "segway_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("teleop_vel_limit_mps",        double_t,    1<<1,  "Maximum velocity in m/s for teleop",                      0.5,      0.0,    8.0)
gen.add("teleop_accel_limit_mps2",     double_t,    1<<2,  "Maximum velocity in m/s for teleop",                      0.5,      0.05,   7.848)
gen.add("teleop_yaw_rate_limit_rps",   double_t,    1<<3,  "Maximum yaw_rate in rad/s for teleop",                    1.0,      0.0,    4.5)
gen.add("teleop_yaw_accel_limit_rps2", double_t,    1<<4,  "Maximum yaw acceleration in rad/s^2 for teleop",          1.0,      0.063,  28.274)


gen.add("vel_limit_mps",            double_t,    1<<5,  "Maximum velocity in m/s for RMP",                             1.0,      0.0,    8.0)
gen.add("accel_limit_mps2",         double_t,    1<<6,  "Maximum acceleration in m/s^2 for RMP",                       0.5,      0.05,   7.848)
gen.add("decel_limit_mps2",         double_t,    1<<7,  "Maximum deceleration in m/s^2 for RMP",                       0.5,      0.05,   7.848)
gen.add("dtz_decel_limit_mps2",     double_t,    1<<8,  "Maximum emergency DTZ deceleration in m/s^2 for RMP",         1.0,      0.981,  7.848)
gen.add("yaw_rate_limit_rps",       double_t,    1<<9,  "Maximum yaw rate in rad/s for RMP",                           1.0,      0.01,   4.5)
gen.add("yaw_accel_limit_rps2",     double_t,    1<<10,  "Maximum yaw acceleration in rad/s^2 for RMP",                1.0,      0.063,  28.274)
gen.add("lateral_accel_limit_mps2", double_t,    1<<11,  "Maximum lateral acceleration in m/s^2 for RMP",              4.905,    0.981,  9.81)
gen.add("tire_rolling_diameter_m",  double_t,    1<<12,  "Tire rolling diameter in m for RMP",                         0.46228,  0.05,   1.0)
gen.add("wheel_base_length_m",      double_t,    1<<13,  "Distance between front and rear contact patch in m for RMP", 0.5842,   0.4142, 1.0)
gen.add("wheel_track_width_m",      double_t,    1<<14, "Distance between left and right contact patch in m for RMP",  0.569976, 0.3556, 1.0)
gen.add("gear_ratio",               double_t,    1<<15, "Input to ouput gear ratio for RMP",                           24.2667,  1.0,    200.0)


gen.add("enable_audio",             bool_t, 1<<16, "Check to enable audio",                             True)
gen.add("motion_while_charging",    bool_t, 1<<16, "Allow motion with charger connected",               False) 
gen.add("balance_mode_enabled",     bool_t, 1<<16, "Allow transition to balance mode; only for RMP220", False)

bal_gain_enum = gen.enum([ gen.const("Default", int_t, 0x0, ""),
                         gen.const("Light", int_t, 0x1, ""),
                         gen.const("Tall", int_t, 0x2, ""),
                         gen.const("Heavy", int_t, 0x4, ""),
                         gen.const("Custom", int_t, 0x8, "") ],
                       "Balance gain tunings (see manual for RMP220)")
gen.add("balace_gains", int_t, 1<<16, "Balance Gain Schedule", 0x0, edit_method=bal_gain_enum)

vel_input_filter_enum = gen.enum([ gen.const("filter_10Hz_Cutoff", int_t, 0x0, ""), 
                         gen.const("filter_4Hz_Cutoff", int_t, 0x1, ""),
                         gen.const("filter_1Hz_Cutoff", int_t, 0x2, ""),
                         gen.const("filter_0p5Hz_Cutoff", int_t, 0x4, ""),
                         gen.const("filter_0p2Hz_Cutoff", int_t, 0x8, "") ],
                       "Velocity controller input filter cutoff frequency")
gen.add("vel_ctl_input_filter", int_t, 1<<16, "Velocity Input Filter Cutoff", 0x0, edit_method=vel_input_filter_enum)

yaw_input_filter_enum = gen.enum([ gen.const("filter_10Hz_Cutoff", int_t, 0x0, ""), 
                         gen.const("filter_4Hz_Cutoff", int_t, 0x1, ""),
                         gen.const("filter_1Hz_Cutoff", int_t, 0x2, ""),
                         gen.const("filter_0p5Hz_Cutoff", int_t, 0x4, ""),
                         gen.const("filter_0p2Hz_Cutoff", int_t, 0x8, "") ],
                       "Yaw controller input filter cutoff frequency")
gen.add("yaw_ctl_input_filter", int_t, 1<<16, "Yaw Input Filter Cutoff", 0x0, edit_method=yaw_input_filter_enum)

gen.add("torqe_limit", double_t, 1<<17, "Limits peak torque from from system 0-100% of system capability", 100.0,  0.0, 100.0)

gen.generate(PACKAGE, "segway", "segway")
exit
