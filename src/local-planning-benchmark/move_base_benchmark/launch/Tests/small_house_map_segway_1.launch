<!-- 
  Simulate a differential drive robot with the teb_local_planner in gazebo:
  - gazebo
  - map_server
  - move_base
  - static map
  - fake localization
  - rviz view
 -->
<launch>

  <!--  ************** Global Parameters ***************  -->
  <param name="/use_sim_time" value="true"/>
  <arg name="gui" default="true"/>

  <!-- Initial pose -->
  <arg name="initial_pose_x" default="2.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="1.5708"/>

  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="2.5"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="yaw" default="-1.57"/>
  <arg name="robot_name" default="$(optenv SEGWAY_PLATFORM_NAME RMP_220)"/>

  <!-- Filename -->
  <arg name="log_filename" default="$(find move_base_benchmark)/launch/log.txt" />
  <arg name="map_filename" default="$(find move_base_benchmark)/maps/small_house/map.yaml" />
  <arg name="world_filename" default="$(find gazebo_world)/world/Tests/small_house_map_1.world" />
  <arg name="global_frame" value="map" />

  <!--  ************** Navigation *************** -->
  <node pkg="move_base_benchmark" type="move_base_benchmark" respawn="false" name="move_base_benchmark" output="screen">
    <rosparam file="$(find move_base_benchmark)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find move_base_benchmark)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find move_base_benchmark)/params/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find move_base_benchmark)/params/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find move_base_benchmark)/params/teb_local_planner_params.yaml" command="load" />
    <param name="global_costmap/global_frame" value="$(arg global_frame)" />
    <param name="local_costmap/global_frame" value="$(arg global_frame)" />

    <param name="base_global_planner" value="global_planner/GlobalPlanner" />
    <param name="planner_frequency" value="5.0" />
    <param name="planner_patience" value="5.0" />

    <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
    <param name="controller_frequency" value="15.0" />
    <param name="controller_patience" value="15.0" />

    <param name="log_filename" value="$(arg log_filename)" />
    <remap from="cmd_vel" to="segway/cmd_vel"/>
  </node> 
  <!--  ****** Maps *****  -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_filename)" output="screen">
    <param name="frame_id" value="$(arg global_frame)"/>
  </node>

  <!--  ****** Localization *****  -->
  <node name="fake_localization" pkg="fake_localization" type="fake_localization" respawn="false" >
    <param name="global_frame_id" value="$(arg global_frame)" />
  </node>

  <!--  ****** Start Gazebo and launch world model *****  -->
  <include file="$(find gazebo_world)/launch/world_launch.launch">
    <arg name="world_name" value="$(arg world_filename)"/>
    <arg name="gui" value="$(arg gui)" />
  </include>

  <!-- Spawn Segway mobile robot -->
  <include file="$(find segway_gazebo)/launch/spawn_segway.launch">
    <arg name="x_pos" value="$(arg x_pos)" />
    <arg name="y_pos" value="$(arg y_pos)" />
    <arg name="z_pos" value="$(arg z_pos)" />
    <arg name="yaw" value="$(arg yaw)" />
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>

  <!-- Load the Robot Description
  <include file="$(find segway_description)/launch/description.launch"/>-->
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot
  <node name="spawn_segway_model" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -model segway_robot -param robot_description -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y $(arg yaw)"/> -->
  
  <!-- -->
  <rosparam file="$(find widowx_turret_controller)/config/widowx_control.yaml" command="load"/>
  <!-- load the controllers -->
  <node name="controller_spawner_pt" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="pan_controller tilt_controller"/>

  <!--<node pkg="widowx_turret_controller" name="pt_cmd" type="pt_cmd" respawn="true" launch-prefix="bash -c 'sleep 15; $0 $@' "/>--> 

  <!-- Launch Segway sim ros_control 
  <include file="$(find segway_sim_control)/launch/$(arg robot_name)_control.launch"/>-->

  <!-- Point cloud to laser scan transformation
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" >
    <remap from="cloud_in" to="/velodyne_points"/>
    <param name="min_height" value="0.3" />
    <param name="max_height" value="1.5" />
    <param name="angle_min" value="-3.1416" />
    <param name="angle_max" value="3.1416" />
    <param name="scan_time" value="0.1" />
    <param name="range_max" value="10.0" />
    <param name="range_min" value="0.45" />
    <param name="use_inf" value="false" />
    <param name="angle_increment" value="0.00613" />
    <param name="target_frame" value="base_link" />
  </node> -->

  <!--  **************** Visualisation ****************  -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find move_base_benchmark)/launch/rviz_navigation.rviz"/>

  <!--  ****** Actor Position Publisher *****  
  <node name="actor_pos_publish_node" pkg="actor_pos_publish" type="actor_pos_publish_node" respawn="true" 
  launch-prefix="bash -c 'sleep 17; $0 $@' "/>-->
  
</launch>